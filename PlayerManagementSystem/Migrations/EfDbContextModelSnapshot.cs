// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlayerManagementSystem.EfDbContext;

#nullable disable

namespace PlayerManagementSystem.Migrations
{
    [DbContext(typeof(EfDbContext))]
    partial class EfDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlayerManagementSystem.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AddressId"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Palika")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Ward")
                        .HasColumnType("integer");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("PlayerManagementSystem.Models.Palika", b =>
                {
                    b.Property<int>("PalikaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PalikaId"));

                    b.Property<List<int>>("LocalTeams")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("Wards")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("PalikaId");

                    b.ToTable("Palikas");
                });

            modelBuilder.Entity("PlayerManagementSystem.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DOB")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PermanentAddressId")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int?>("TempAddressId")
                        .HasColumnType("integer");

                    b.Property<bool>("isSameAddress")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("PermanentAddressId");

                    b.HasIndex("TempAddressId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("PlayerManagementSystem.Models.Teams", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TeamId"));

                    b.Property<int>("CoachId")
                        .HasColumnType("integer");

                    b.Property<int>("ManagerId")
                        .HasColumnType("integer");

                    b.Property<int?>("PalikaId")
                        .HasColumnType("integer");

                    b.Property<List<int>>("Players")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("WardId")
                        .HasColumnType("integer");

                    b.HasKey("TeamId");

                    b.HasIndex("CoachId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("PalikaId");

                    b.HasIndex("WardId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("PlayerManagementSystem.Models.Ward", b =>
                {
                    b.Property<int>("WardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WardId"));

                    b.Property<int>("PalikaId")
                        .HasColumnType("integer");

                    b.Property<List<int>>("Teams")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("WardId");

                    b.HasIndex("PalikaId");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("PlayerManagementSystem.Models.Person", b =>
                {
                    b.HasOne("PlayerManagementSystem.Models.Address", "PermanentAddress")
                        .WithMany("Persons")
                        .HasForeignKey("PermanentAddressId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlayerManagementSystem.Models.Address", null)
                        .WithMany()
                        .HasForeignKey("TempAddressId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PermanentAddress");
                });

            modelBuilder.Entity("PlayerManagementSystem.Models.Teams", b =>
                {
                    b.HasOne("PlayerManagementSystem.Models.Person", "Coach")
                        .WithMany("CoachedTeams")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerManagementSystem.Models.Person", "Manager")
                        .WithMany("ManagedTeams")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerManagementSystem.Models.Palika", "Palika")
                        .WithMany("LocalTeamsList")
                        .HasForeignKey("PalikaId");

                    b.HasOne("PlayerManagementSystem.Models.Ward", "Ward")
                        .WithMany("TeamList")
                        .HasForeignKey("WardId");

                    b.Navigation("Coach");

                    b.Navigation("Manager");

                    b.Navigation("Palika");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("PlayerManagementSystem.Models.Ward", b =>
                {
                    b.HasOne("PlayerManagementSystem.Models.Palika", "RefPalika")
                        .WithMany("WardsList")
                        .HasForeignKey("PalikaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RefPalika");
                });

            modelBuilder.Entity("PlayerManagementSystem.Models.Address", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("PlayerManagementSystem.Models.Palika", b =>
                {
                    b.Navigation("LocalTeamsList");

                    b.Navigation("WardsList");
                });

            modelBuilder.Entity("PlayerManagementSystem.Models.Person", b =>
                {
                    b.Navigation("CoachedTeams");

                    b.Navigation("ManagedTeams");
                });

            modelBuilder.Entity("PlayerManagementSystem.Models.Ward", b =>
                {
                    b.Navigation("TeamList");
                });
#pragma warning restore 612, 618
        }
    }
}
